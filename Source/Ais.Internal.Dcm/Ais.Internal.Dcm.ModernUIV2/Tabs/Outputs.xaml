<UserControl x:Class="Ais.Internal.Dcm.ModernUIV2.Tabs.Outputs"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mui="clr-namespace:FirstFloor.ModernUI.Windows.Controls;assembly=FirstFloor.ModernUI"
             xmlns:local="clr-namespace:Ais.Internal.Dcm.ModernUIV2.ViewModels"
             xmlns:converter="clr-namespace:Ais.Internal.Dcm.ModernUIV2.Converter"
             mc:Ignorable="d" 
      d:DesignHeight="300" d:DesignWidth="300">
    <UserControl.Resources>

        <SolidColorBrush x:Key="GlyphBrush" Color="#444" />

        <Style x:Key="ExpandCollapseToggleStyle" TargetType="ToggleButton">
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid Width="15"
                          Height="13"
                          Background="Transparent">
                            <Path x:Name="ExpandPath"
                            HorizontalAlignment="Left" 
                            VerticalAlignment="Center" 
                            Margin="1,1,1,1"
                            Fill="{StaticResource GlyphBrush}"
                            Data="M 4 0 L 8 4 L 4 8 Z"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Data" TargetName="ExpandPath" Value="M 0 4 L 8 4 L 4 8 Z"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter Property="Data" TargetName="ExpandPath" Value="M 4 0 L 8 4 L 4 8 Z"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <converter:BoolToVisibleConverter x:Key="BoolToVis"></converter:BoolToVisibleConverter>

        <converter:TagConverter x:Key="TagConverter"></converter:TagConverter>

        <Style TargetType="ListViewItem" x:Key="listViewItemStyle">
            <Setter Property="BorderBrush" Value="Transparent"></Setter>
            <Setter Property="BorderThickness" Value="0"></Setter>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListViewItem">
                        <Border x:Name="border" Background="Transparent">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="Disabled" />
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="SelectionStates">
                                    <VisualState x:Name="Unselected" />
                                    <VisualState x:Name="Selected">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                              Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0" Value="Transparent" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="SelectedUnfocused">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                              Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0" Value="Transparent" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True" >
                    <!--<Setter Property="FontWeight" Value="Bold" />-->
                    <Setter Property="Background" Value="Transparent" />
                    <!--<Setter Property="Foreground" Value="White" />-->
                    <Setter Property="Cursor" Value="Hand"></Setter>
                </Trigger>
                <Trigger Property="IsSelected" Value="False" >
                    <!--<Setter Property="FontWeight" Value="Bold" />-->
                    <Setter Property="Background" Value="Transparent" />
                    <!--<Setter Property="Foreground" Value="#1fbba6" />-->
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Cursor" Value="Hand"></Setter>
                    <Setter Property="Background" Value="Transparent"/>
                </Trigger>
                <Trigger Property="Control.IsMouseOver" Value="True">
                    <Setter Property="Control.Background" Value="Transparent" />
                    <Setter Property="Cursor" Value="Hand"></Setter>
                </Trigger>
            </Style.Triggers>
            <Style.Resources>
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent"/>
            </Style.Resources>

        </Style>

        <Style TargetType="ListViewItem" x:Key="listViewOutputItemStyle">
            <Setter Property="BorderBrush" Value="Transparent"></Setter>
            <Setter Property="BorderThickness" Value="0"></Setter>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListViewItem">
                        <Border x:Name="border" Background="Transparent">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="Disabled" />
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="SelectionStates">
                                    <VisualState x:Name="Unselected" />
                                    <VisualState x:Name="Selected">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                              Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0" Value="Transparent" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="SelectedUnfocused">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                              Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0" Value="Transparent" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True" >
                    <!--<Setter Property="FontWeight" Value="Bold" />-->
                    <Setter Property="Background" Value="Transparent" />
                    <!--<Setter Property="Foreground" Value="White" />-->
                </Trigger>
                <Trigger Property="IsSelected" Value="False" >
                    <!--<Setter Property="FontWeight" Value="Bold" />-->
                    <Setter Property="Background" Value="Transparent" />
                    <!--<Setter Property="Foreground" Value="#1fbba6" />-->
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="Transparent"/>
                </Trigger>
                <Trigger Property="Control.IsMouseOver" Value="True">
                    <Setter Property="Control.Background" Value="Transparent" />
                </Trigger>
            </Style.Triggers>
            <Style.Resources>
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent"/>
            </Style.Resources>

        </Style>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="60"></RowDefinition>
            <RowDefinition Height="360"></RowDefinition>
            <RowDefinition Height="40"></RowDefinition>
        </Grid.RowDefinitions>
        <Grid Grid.Row="1" x:Name="VideoGrid" Visibility="Collapsed">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <ScrollViewer VerticalScrollBarVisibility="Auto">
                <!-- List that displays the Video files -->
                <ListView ItemsSource="{Binding Path=GroupedOutputFiles}" ItemContainerStyle="{StaticResource listViewItemStyle}">
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition></RowDefinition>
                                    <RowDefinition></RowDefinition>
                                    <RowDefinition></RowDefinition>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition></ColumnDefinition>
                                    <ColumnDefinition></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <StackPanel Grid.Column="0" Grid.ColumnSpan="2" Orientation="Horizontal">
                                    <ToggleButton x:Name="Expander" Style="{StaticResource ExpandCollapseToggleStyle}" HorizontalAlignment="Left" ClickMode="Press" />
                                    <!--IsChecked="{Binding Path=IsSelected, Mode=TwoWay, RelativeSource={RelativeSource FindAncestor, AncestorType=ListView, AncestorLevel=1}}"-->
                                    <TextBlock Margin="10,0,0,0" Text="{Binding Path=FileName}" HorizontalAlignment="Left" FontFamily="Segoe UI Semibold" Foreground="#14b9d6"></TextBlock>
                                </StackPanel>
                                <!--Visibility="{Binding ElementName=Expander, Path=IsChecked, Converter={StaticResource BoolToVis}}"
                                IsChecked="{Binding Path=IsSelected, Mode=TwoWay, RelativeSource={RelativeSource FindAncestor, AncestorType=ListView, AncestorLevel=1}}"-->
                                <Grid x:Name="videoGrid" Grid.Row="1" DataContext="{Binding}" Grid.ColumnSpan="2" Margin="25,10,0,0" >
                                    <Grid.RowDefinitions>
                                        <RowDefinition></RowDefinition>
                                        <RowDefinition></RowDefinition>
                                        <RowDefinition></RowDefinition>
                                    </Grid.RowDefinitions>
                                    <TextBlock Text="OUTPUT TYPES" Foreground="#9ea7b3" FontFamily="Segoe UI Semibold"></TextBlock>
                                    <!-- List View for display of Encoding Output with Play and Share buttons -->
                                    <ListView Grid.Row="1" ItemsSource="{Binding Path=Outputs}" Margin="10,0,0,0" ItemContainerStyle="{StaticResource listViewOutputItemStyle}">
                                        <ListView.ItemTemplate>
                                            <DataTemplate>
                                                <StackPanel Orientation="Horizontal" Tag="{Binding Url}">
                                                    <TextBlock x:Name="txtBlockForUrl" Width="300" HorizontalAlignment="Left" TextWrapping="Wrap"  Text="{Binding EncodingName}"/>
                                                    <Button Margin="5,0,0,2" Padding="4" DataContext="{Binding}" CommandParameter="{Binding Path=DataContext,  RelativeSource={RelativeSource FindAncestor, AncestorType=Grid, AncestorLevel=2}}" Content="SHARE VIDEO" FontFamily="Segoe UI Regular" Foreground="#FFF" Background="#323A45" FontSize="10" HorizontalAlignment="Right" Click="CopyToClipBoard_Click">
                                                        <Button.Style>
                                                            <Style TargetType="{x:Type Button}">
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding Path=IsUpdated}" Value="True">
                                                                        <Setter Property="Button.Visibility" Value="Visible"/>
                                                                    </DataTrigger>
                                                                    <DataTrigger Binding="{Binding Path=IsUpdated}"  Value="False">
                                                                        <Setter Property="Button.Visibility" Value="Collapsed"/>
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Button.Style>
                                                    </Button>
                                                    <Button Margin="5,0,0,2" Padding="4" DataContext="{Binding}" Content="PLAY VIDEO" FontFamily="Segoe UI Regular" Foreground="#FFF" Background="#323A45" FontSize="10" HorizontalAlignment="Right" Click="Preview_Click">
                                                        <Button.Style>
                                                            <Style TargetType="{x:Type Button}">
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding Path=IsUpdated}" Value="True">
                                                                        <Setter Property="Button.Visibility" Value="Visible"/>
                                                                    </DataTrigger>
                                                                    <DataTrigger Binding="{Binding Path=IsUpdated}"  Value="False">
                                                                        <Setter Property="Button.Visibility" Value="Collapsed"/>
                                                                    </DataTrigger>
                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                        <Setter Property="Background" Value="#323A45"/>
                                                                        <Setter Property="Foreground" Value="#FFF"/>
                                                                    </Trigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Button.Style>
                                                    </Button>
                                                </StackPanel>
                                            </DataTemplate>
                                        </ListView.ItemTemplate>
                                    </ListView>
                                    <StackPanel Grid.Row="2" Margin="0,5,0,0">
                                        <TextBlock Text="TAGS" Foreground="#9ea7b3" FontFamily="Segoe UI Semibold"></TextBlock>
                                        <TextBlock Margin="0,5,0,0" Text="{Binding Path=Tags, Converter={StaticResource TagConverter}}" Width="600" HorizontalAlignment="Left" TextWrapping="Wrap"></TextBlock>
                                    </StackPanel>
                                </Grid>
                                <Separator Grid.Row="2" Background="#9EA7B3" Height="4" Grid.ColumnSpan="2"></Separator>
                            </Grid>
                            <DataTemplate.Triggers>
                                <DataTrigger Binding="{Binding (ListViewItem.IsSelected), RelativeSource={RelativeSource FindAncestor, AncestorType=ListViewItem}}" Value="False">
                                    <Setter TargetName="videoGrid" Property="Visibility" Value="Collapsed" />
                                    <Setter TargetName="Expander" Property="IsChecked" Value="False"></Setter>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding (ListViewItem.IsSelected), RelativeSource={RelativeSource FindAncestor, AncestorType=ListViewItem}}" Value="True">
                                    <Setter TargetName="videoGrid" Property="Visibility" Value="Visible" />
                                    <Setter TargetName="Expander" Property="IsChecked" Value="True"></Setter>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=IsChecked, ElementName=Expander}" Value="False">
                                    <Setter TargetName="videoGrid" Property="Visibility" Value="Collapsed" />
                                    <Setter Property="ListView.IsSelected" Value="False" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=IsChecked, ElementName=Expander}" Value="True">
                                    <Setter TargetName="videoGrid" Property="Visibility" Value="Visible" />
                                    <Setter Property="ListView.IsSelected" Value="True" />
                                </DataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            </ScrollViewer>
        </Grid>
        <Button Grid.Row="2" Grid.ColumnSpan="2" Margin="5" Cursor="Hand" HorizontalAlignment="Right" VerticalAlignment="Top" ClickMode="Press" Click="Reload_Outputs">
            <Button.Template>
                <ControlTemplate>
                    <Border Background="#F27935">
                        <StackPanel Orientation="Horizontal">
                            <Image  Margin="10,10,0,10" Source="../Images/icons/icon-refresh.png" HorizontalAlignment="Left" OpacityMask="#FF322F2F"></Image>
                            <TextBlock Text="REFRESH LIST" Foreground="#FFF" VerticalAlignment="Center" Style="{StaticResource ButtonTextSizeStyle}" Margin="5"></TextBlock>
                        </StackPanel>
                    </Border>
                </ControlTemplate>
            </Button.Template>
        </Button>
        <Control x:Name="loading" Template="{StaticResource loadingAnimation}" VerticalAlignment="Center"  Visibility="Visible"/>
    </Grid>
</UserControl>
